@page "/libros"
@page "/libros/{LibroId:int}"
@inject LibrosBLL librosBLL
@inject NotificationService notificationService
<EditForm Model=libro OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />


    <div class="card text-primary">
        <div class="card-header text-center">
            <h1>Registro de libros</h1>
        </div>
        <div class="col-3">

                <label for="txtId" class="form-label">Libro ID:</label>
                <input type="number" id="txtId" class="form-control" @bind-value="libro.LibroId">


                <button name="btnBuscar" id="btnBuscar" class="btn btn-primary" @onclick="Buscar">
                    <span class="oi oi-magnifying-glass"></span> Buscar
                </button>

                <label for="txt" class="form-label">Titulo:</label>
                <input type="text" id="txtId" class="form-control" @bind-value="libro.Titulo">
                  <ValidationMessage For="@(() => libro.Titulo)" />
                

                <label for="txt" class="form-label">Precio:</label>
                <input type="number" id="txtId" class="form-control" @bind-value="libro.Precio">
                 <ValidationMessage For="@(() => libro.Precio)" />

                <label for="txtFecha" class="form-label">Fecha:</label>
                    <input type="date" id="txtFecha" class="form-control" @bind-value="libro.Fecha">


            </div>
    </div>

       <div class=" card-footer text-center">

                <button name="btNuevo" id="btNuevo" class="btn btn-primary mr-2" @onclick="Nuevo">
                   Nuevo
                </button>

                <button name="btnGuardar" id="btnGuardar" class="btn btn-success mr-2" type="submit">
                     Guardar
                </button>

                <button name="btnEliminar" id="btnEliminar" class="btn btn-danger" @onclick="Eliminar">
                    Eliminar
                </button>
                </div>
    
    
</EditForm>
@code {

    [Parameter]
    public int LibroId { get; set; }
    public Libros libro { get; set; } = new Libros();

    protected override void OnInitialized()
    {
        if (LibroId > 0)
        {
            this.libro.LibroId = LibroId;
            this.Buscar();
        }
    }
    void Buscar()
    {
        var LibroEncontrado = librosBLL.Buscar(libro.LibroId);
        if (LibroEncontrado != null)
            this.libro = LibroEncontrado;
    }

    void Nuevo()
    {
        this.libro = new Libros();
    }
    void Eliminar()
    {
        if (librosBLL.Eliminar(this.libro))
            Nuevo();
             ShowNotification(
                    new NotificationMessage
                    {
                        Severity = NotificationSeverity.Info,
                        Summary = "Eliminado correctamente"
                    });
          
    }
    void Guardar()
    {
        if (librosBLL.Guardar(this.libro))
            Nuevo();
             ShowNotification(
                    new NotificationMessage
                    {
                        Severity = NotificationSeverity.Info,
                        Summary = "Guardado correctamente"
                    });
    }
     void ShowNotification(NotificationMessage message)
  {
     notificationService.Notify(message);
  }

}